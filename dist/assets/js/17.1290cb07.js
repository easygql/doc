(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{338:function(t,v,_){"use strict";_.r(v);var a=_(33),e=Object(a.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"八、触发器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#八、触发器"}},[t._v("#")]),t._v(" 八、触发器")]),t._v(" "),_("p",[t._v("trigger主要是基于某一个对象类型的数据的增删改进行订阅，通过trigger可以非常方便的调用第三方API（比如sendgrid、slack、twillio sms等）从而实现与第三方API集成的目的。")]),t._v(" "),_("h2",{attrs:{id:"_8-1-触发器的架构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-触发器的架构"}},[t._v("#")]),t._v(" 8.1 触发器的架构")]),t._v(" "),_("p",[t._v("如下图：")]),t._v(" "),_("p",[_("img",{attrs:{src:"/doc/img/trigger_architect.png#alt=trigger_architect",alt:""}})]),t._v(" "),_("h2",{attrs:{id:"_8-2-触发器属性"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-触发器属性"}},[t._v("#")]),t._v(" 8.2 触发器属性")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[_("strong",[t._v("序号")])]),t._v(" "),_("th",[_("strong",[t._v("属性")])]),t._v(" "),_("th",[_("strong",[t._v("含义")])]),t._v(" "),_("th",[_("strong",[t._v("非空")])]),t._v(" "),_("th",[_("strong",[t._v("默认值")])])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("1")]),t._v(" "),_("td",[t._v("id")]),t._v(" "),_("td",[t._v("触发器的唯一ID")]),t._v(" "),_("td",[t._v("非空")]),t._v(" "),_("td",[t._v("UUID")])]),t._v(" "),_("tr",[_("td",[t._v("2")]),t._v(" "),_("td",[t._v("name")]),t._v(" "),_("td",[t._v("trigger的名字")]),t._v(" "),_("td",[t._v("非空")]),t._v(" "),_("td",[t._v("无")])]),t._v(" "),_("tr",[_("td",[t._v("3")]),t._v(" "),_("td",[t._v("typename")]),t._v(" "),_("td",[t._v("对应contenttype的名字")]),t._v(" "),_("td",[t._v("非空")]),t._v(" "),_("td",[t._v("无")])]),t._v(" "),_("tr",[_("td",[t._v("4")]),t._v(" "),_("td",[t._v("eventtype")]),t._v(" "),_("td",[t._v("Insert、 update、 remove 、all")]),t._v(" "),_("td",[t._v("非空")]),t._v(" "),_("td",[t._v("无")])]),t._v(" "),_("tr",[_("td",[t._v("5")]),t._v(" "),_("td",[t._v("whereCondition")]),t._v(" "),_("td",[t._v("触发器过滤条件")]),t._v(" "),_("td",[t._v("可空")]),t._v(" "),_("td",[t._v("无")])]),t._v(" "),_("tr",[_("td",[t._v("6")]),t._v(" "),_("td",[t._v("headers")]),t._v(" "),_("td",[t._v("http协议头")]),t._v(" "),_("td",[t._v("可空")]),t._v(" "),_("td",[t._v("无")])]),t._v(" "),_("tr",[_("td",[t._v("7")]),t._v(" "),_("td",[t._v("ok_status")]),t._v(" "),_("td",[t._v("发送成功的状态码")]),t._v(" "),_("td",[t._v("非空")]),t._v(" "),_("td",[t._v("默认为200")])]),t._v(" "),_("tr",[_("td",[t._v("8")]),t._v(" "),_("td",[t._v("retry_times")]),t._v(" "),_("td",[t._v("重试次数")]),t._v(" "),_("td",[t._v("非空")]),t._v(" "),_("td",[t._v("默认为3次")])]),t._v(" "),_("tr",[_("td",[t._v("9")]),t._v(" "),_("td",[t._v("webhook_url")]),t._v(" "),_("td",[t._v("restapi的地址")]),t._v(" "),_("td",[t._v("非空")]),t._v(" "),_("td",[t._v("无")])]),t._v(" "),_("tr",[_("td",[t._v("10")]),t._v(" "),_("td",[t._v("payload")]),t._v(" "),_("td",[t._v("restapi报文体格式")]),t._v(" "),_("td",[t._v("可空")]),t._v(" "),_("td",[t._v("无")])])])]),t._v(" "),_("h3",{attrs:{id:"_8-3-默认payload"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_8-3-默认payload"}},[t._v("#")]),t._v(" 8.3 默认payload")]),t._v(" "),_("p",[t._v("假设某个contenttype的定义为如下：")]),t._v(" "),_("div",{staticClass:"language-json extra-class"},[_("pre",{pre:!0,attrs:{class:"language-json"}},[_("code",[t._v("type chatroom "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n content"),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String\n id"),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ID\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),_("p",[t._v("对应的默认payload格式为对应的changeresult的格式：")]),t._v(" "),_("div",{staticClass:"language-json extra-class"},[_("pre",{pre:!0,attrs:{class:"language-json"}},[_("code",[_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\neventtype"),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" EventType\nnew_val"),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" chatroom\nold_val"),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" chatroom\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),_("h3",{attrs:{id:"_8-4-自定义payload"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_8-4-自定义payload"}},[t._v("#")]),t._v(" 8.4 自定义payload")]),t._v(" "),_("p",[t._v("用户可以自定义trigger进行调用时payload的格式。自定义的payload为一个key-value的列表。")]),t._v(" "),_("p",[t._v("Key为对应返回值的对象的key值，value为返回值的JSON表述。")]),t._v(" "),_("p",[t._v("用户自定义trigger类型时，可以采用如下方式定义")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("属性")]),t._v(" "),_("th",[t._v("取值")]),t._v(" "),_("th",[t._v("说明")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("Key")]),t._v(" "),_("td",[t._v("对应key-value中的key")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("valuetype")]),t._v(" "),_("td",[t._v("枚举值，可以EnumValue，Eventvalue")]),t._v(" "),_("td",[t._v("EnumValue为用户随便定义的某个常量EventValue为用户定义的从默认payload中取值。")])]),t._v(" "),_("tr",[_("td",[t._v("value")]),t._v(" "),_("td",[t._v("对应的EnumValue值或者EventValue值。")]),t._v(" "),_("td",[t._v('当valuetype为enumValue时，value为某个固定值，当valuetype为Eventvalue时，可以取默认payload种的某个字段的值，嵌套对象用"."分隔')])])])]),t._v(" "),_("h2",{attrs:{id:"_8-5-event-对象的缓存"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_8-5-event-对象的缓存"}},[t._v("#")]),t._v(" 8.5  Event 对象的缓存")]),t._v(" "),_("p",[t._v("EasyGQL会缓存24小时以内的所有Trigger的Event数据，包括产生时间，发送时间，重试次数，并且提供手动重发的功能。EasyGQL会每24小时清空一次前24小时以前产生的Event数据。")]),t._v(" "),_("h2",{attrs:{id:"_8-6支持的数据库"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_8-6支持的数据库"}},[t._v("#")]),t._v(" 8.6支持的数据库")]),t._v(" "),_("p",[t._v("支持rethtinkdb,postgresql,mysql。")])])}),[],!1,null,null,null);v.default=e.exports}}]);