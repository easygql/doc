(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{335:function(t,e,a){"use strict";a.r(e);var s=a(33),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"六、对象类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#六、对象类型"}},[t._v("#")]),t._v(" 六、对象类型")]),t._v(" "),a("p",[t._v("在EasyGQL中,开发者可以通过EasyGQL提供的框架非常方便的扩展数据类型，EasyGQL会为数据类型提供持久化服务、对应数据的增删改查接口以及相应的权限控制。")]),t._v(" "),a("h2",{attrs:{id:"_6-1-对象定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-对象定义"}},[t._v("#")]),t._v(" 6.1  对象定义")]),t._v(" "),a("p",[t._v("要完整描述一个对象，需要定义如下属性：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("序号")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("属性名")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("含义")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("默认值")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("是否非空")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("id")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("类型唯一标识")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("系统会自动赋予每个新增字段一个唯一标识")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("非空")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("2")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("name")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("类型名称")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("无")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("非空")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("3")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("scalarfields")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("标量字段列表")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("空列表")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("非空")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("4")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("enumfields")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("枚举字段列表")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("空列表")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("非空")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("5")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("fromrelations")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("左关联字段列表")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("空列表")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("非空")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("6")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("torelations")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("右关联字段列表")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("空列表")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("非空")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("7")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("unreadable_roles")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("不可读角色列表")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("空列表")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("非空")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("8")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("uninsertable_roles")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("不可插入角色列表")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("空列表")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("非空")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("9")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("undeletable_roles")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("不可删除角色列表")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("空列表")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("非空")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("10")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("unupdatable_roles")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("不可更新角色列表")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("空列表")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("非空")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("11")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("read_constraints")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("读约束")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("空map")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("非空")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("12")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("update_constraints")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("更新约束")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("空map")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("非空")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("13")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("delete_constraints")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("删除约束")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("空map")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("否")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("14")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("unique_constraints")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("唯一约束")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("空map")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("否")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("15")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("description")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("描述")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v('""')]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("否")])])])]),t._v(" "),a("p",[t._v("一个对象类型主要包含以下信息：")]),t._v(" "),a("ul",[a("li",[t._v("id、名字、描述等信息")]),t._v(" "),a("li",[t._v("标量字段、枚举类型字段、关联字段等字段信息")]),t._v(" "),a("li",[t._v("增删改查等操作的角色限制信息")]),t._v(" "),a("li",[t._v("每一个角色对于增删改查的行级约束信息")])]),t._v(" "),a("h2",{attrs:{id:"_6-2-对象类型定义的api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-对象类型定义的api"}},[t._v("#")]),t._v(" 6.2 对象类型定义的API")]),t._v(" "),a("p",[t._v("主要介绍对象类型的新增、修改和删除、和查询")]),t._v(" "),a("h3",{attrs:{id:"_6-2-1-对象类型的新增"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-1-对象类型的新增"}},[t._v("#")]),t._v(" 6.2.1 对象类型的新增")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("input ContentTypeInput  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  delete_constraints"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Object\n  description"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n  id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ID")]),t._v("\n  name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n  read_constraints"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Object\n  undeletable_roles"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Role"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  uninsertable_roles"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Role"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  unreadable_roles"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Role"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  unupdatable_roles"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Role"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  update_constraints"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Object\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("objecttypesInSchemaObjectAddInput")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("child_Id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" child_object"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ContentTypeInput"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" conflict"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" CONFLICTEnum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" replace"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" parent_Id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ID")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ContentType_InsertResult\n")])])]),a("p",[t._v("以上API是在一个schema中增加一个对象类型的API，")]),t._v(" "),a("h3",{attrs:{id:"_6-2-2-对象类型的修改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-2-对象类型的修改"}},[t._v("#")]),t._v(" 6.2.2 对象类型的修改")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("input ContentTypeUpdateInput  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  delete_constraints"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Object\n  description"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String\n  id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ID")]),t._v("\n  name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String\n  read_constraints"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Object\n  undeletable_roles"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Role"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  uninsertable_roles"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Role"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  unreadable_roles"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Role"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  unupdatable_roles"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Role"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  update_constraints"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Object\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\ninput ContentTypeWhereInput  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  and"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ContentTypeWhereInput"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  field_contains"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  filter"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ContentTypeFieldFilter\n  not"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ContentTypeWhereInput\n  or"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ContentTypeWhereInput"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ContentTypeUpdate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("object"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ContentTypeUpdateInput"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" where"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ContentTypeWhereInput"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ContentType_UpdateResult\n")])])]),a("p",[t._v("以上是对一个对象类型进行修改的API")]),t._v(" "),a("h3",{attrs:{id:"_6-2-3-对象类型的删除"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-3-对象类型的删除"}},[t._v("#")]),t._v(" 6.2.3 对象类型的删除")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("objecttypesInSchemaObjectRemove")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("child_Id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" parent_Id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ID")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ContentType_DeleteResult\n")])])]),a("p",[t._v("以上是对一个对象类型进行删除的API")]),t._v(" "),a("h3",{attrs:{id:"_6-2-4-对象类型的查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-4-对象类型的查询"}},[t._v("#")]),t._v(" 6.2.4 对象类型的查询")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ContentType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ID")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ContentType\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ContentTypeMany")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("where"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ContentTypeWhereInput"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ContentType"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v("以上是对一个对象类型进行查询的API,可以通过查询shema信息查询到一个schema下的所有对象类型")]),t._v(" "),a("h2",{attrs:{id:"_6-3-对象的api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-对象的api"}},[t._v("#")]),t._v(" 6.3 对象的API")]),t._v(" "),a("p",[t._v("针对每一个对象类型，EasyGQL会为该类型在数据库中定义相应的数据库存储结构，同时对外提供6种API（以Chat对象类型为例）")]),t._v(" "),a("h3",{attrs:{id:"_6-3-1-新增api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-1-新增api"}},[t._v("#")]),t._v(" 6.3.1 新增API")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('Createchat(conflict: String = "replace", objects: [chatInput]): insert_return\nCreatechatroom(conflict: String = "replace", objects: [chatroomInput]): insert_return\n')])])]),a("p",[t._v("conflict是一个冲突解决配置，默认为replace，表示当碰到ID重复的数据对象时进行整体替代，其他可选择值为update，update表示对冲突对象中重复的字段进行更新，原有的字段如果在插入的时候没有被声明将会保留。")]),t._v(" "),a("p",[t._v("objects 是对应对象的一个数组，对应输入对象的类型为“对象名Input”,例如：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("input chatInput {\n  chatroom: ID!\n  from: String!\n  id: ID\n  message: String!\n}\ninput chatroomInput {\n  id: ID\n  owner: String!\n}\n")])])]),a("p",[t._v("进行数据插入时，对应输入类型与之前定义的类型区别主要有：")]),t._v(" "),a("ul",[a("li",[t._v("增加了一个可选字段id,如果插入时不给该字段赋值，EasyGQL会自动赋予一个UUID为该数据对象的唯一主键。")]),t._v(" "),a("li",[t._v("在存在对象嵌套的情况下，用对应对象的id表示该对象。")])]),t._v(" "),a("p",[t._v("进行数据插入时返回值的格式如下有三部分组成：affectedrow表示被影响的行数：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("type insert_return {\n  affectedrow: Int\n}\n")])])]),a("p",[t._v("此外，EasyGQL会了避免前端长时间等待后台操作结果的返回，提供了不带任何返回值的新增接口，结构如下:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('CreatechatNoReply(conflict: String = "replace", objects: [chatInput]): Boolean\nCreatechatroomNoReply(conflict: String = "replace", objects: [chatroomInput]): Boolean\n')])])]),a("h3",{attrs:{id:"_6-2-2-对象的删除"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-2-对象的删除"}},[t._v("#")]),t._v(" 6.2.2 对象的删除")]),t._v(" "),a("p",[t._v('针对用户定义的每一个对象，EasyGQL会提供一个名为"Delete对象名"数据删除接口，输入参数是查询条件。例如：')]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Deletechat(where: chatWhereFilter): delete_return\nDeletechatroom(where: chatroomWhereFilter): delete_return\n")])])]),a("p",[t._v("参数where为数据查询时的过滤条件，满足过滤条件的所有对象均会被删除。")]),t._v(" "),a("p",[t._v("数据返回有三部分数据：affectedrow表示被影响的行数。例如：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("type delete_return {\n  affectedrow: Int\n}\n")])])]),a("p",[t._v("此外，EasyGQL会了避免前端长时间等待后台操作结果的返回，提供了不带任何返回值的删除接口，结构如下:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("DeletechatNoReply(where: chatWhereFilter): Boolean\nDeletechatroomNoReply(where: chatroomWhereFilter): Boolean\n")])])]),a("h3",{attrs:{id:"_6-2-3-对象的修改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-3-对象的修改"}},[t._v("#")]),t._v(" 6.2.3 对象的修改")]),t._v(" "),a("p",[t._v('针对用户定义的每一个对象，EasyGQL会提供一个"Update对象名"的数据更新接口，该接口接受两个参数：where表示查询条件，object表示待更新的值。例如：')]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Updatechat(object: chatUpdateInput!, where: chatWhereFilter): update_return\nUpdatechatroom(object: chatroomUpdateInput!, where: chatroomWhereFilter): update_return\n")])])]),a("p",[t._v('object的对象类型是“对象名UpdateInput”，是必填字段。“对象名UpdateInput”与"对象名input"的区别是所有字段均为非必填字段。例如：')]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("input chatUpdateInput {\n  chatroom: ID\n  from: String\n  id: ID\n  message: String\n}\ninput chatroomUpdateInput {\n  id: ID\n  owner: String\n}\n")])])]),a("p",[t._v("返回值有三部分内容：affectedrow表示更新的行数，例如：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("type update_return {\n  affectedrow: Int\n}\n")])])]),a("p",[t._v("此外，EasyGQL会了避免前端长时间等待后台操作结果的返回，提供了不带任何返回值的修改接口，结构如下:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("updatechatNoReply(object: chatUpdateInput, where: chatWhereFilter): Boolean\nupdatechatroomNoReply(object: chatroomUpdateInput, where: chatroomWhereFilter): Boolean\n")])])]),a("h3",{attrs:{id:"_6-2-4-对象的查找"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-4-对象的查找"}},[t._v("#")]),t._v(" 6.2.4 对象的查找")]),t._v(" "),a("p",[t._v("针对用户定义的每一个对象类型，EasyGQL提供两个查询接口：“对象名s”和“对象名byid”。")]),t._v(" "),a("h4",{attrs:{id:"_6-2-4-1-对象名s"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-4-1-对象名s"}},[t._v("#")]),t._v(' 6.2.4.1 "对象名s"')]),t._v(" "),a("p",[t._v("如下是chats和chatrooms的定义:")]),t._v(" "),a("p",[t._v("chatrooms(first: Int = -1, last: Int = -1, limit: Int = 2147483647, orderby: String, skip: Int = 0, where: chatroomWhereFilter): chatroomwhere_result")]),t._v(" "),a("p",[t._v("chats(first: Int = -1, last: Int = -1, limit: Int = 2147483647, orderby: String, skip: Int = 0, where: chatWhereFilter): chatwhere_result")]),t._v(" "),a("p",[t._v("在以上定义中：")]),t._v(" "),a("ul",[a("li",[t._v("first表示按照当前排序规则取前xx个要素。")]),t._v(" "),a("li",[t._v("last表示按照当前排序规则取最后xx个要素。")]),t._v(" "),a("li",[t._v("limit表示按照当前排序规则取最多XX个要素。limit不能和first、last共用。")]),t._v(" "),a("li",[t._v("skip表示按照当前排序规则从第XX个元素开始取值。skip不能和first、last共用，skip可以和limit进行组合分页。")]),t._v(" "),a("li",[t._v("orderby表示查询时的排序规则，使用方法如“chatroom,desc”，表示对chatroom进行倒序排列。")]),t._v(" "),a("li",[t._v('"对象名WhereFilter“表示对象的过滤条件。')])]),t._v(" "),a("p",[t._v("过滤条件对象“对象名WhereFilter”：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("input chatWhereFilter {\n  and: chatWhereFilter\n  col: chatFieldFilter\n  field_contains: [String]\n  not: chatWhereFilter\n  or: chatWhereFilter\n}\ninput chatroomWhereFilter {\n  and: chatroomWhereFilter\n  col: chatroomFieldFilter\n  field_contains: [String]\n  not: chatroomWhereFilter\n  or: chatroomWhereFilter\n}\ninput chatFieldFilter {\n  chatroom: IDFilter\n  from: StringFilter\n  id: IDFilter\n  message: StringFilter\n}\ninput chatroomFieldFilter {\n  id: IDFilter\n  owner: StringFilter\n}\n")])])]),a("ul",[a("li",[t._v("其中：")]),t._v(" "),a("li",[t._v("and,or,not表示对后续过滤条件的与、或、非操作。")]),t._v(" "),a("li",[t._v("field_contains，表示所查询对象必须包含的字段。")]),t._v(" "),a("li",[t._v('"对象名FieldFilter"是所查询对象的字段级过滤条件，根据每个字段所基于的标量类型不一样，查询过滤条件不一样。具体见下表：\n| 标量类型 | 操作符 |\n| :--- | --- |\n| String | eq,ne,lt,le,gt,ge,match |\n| Int | eq,ne,lt,le,gt,ge |\n| Long | eq,ne,lt,le,gt,ge |\n| BigDecimal | eq,ne,lt,le,gt,ge |\n| ID | eq,ne,lt,le,gt,ge,match |\n| Boolean | istrue |\n| List | hasone,none,all |')])]),t._v(" "),a("p",[t._v("返回结果定义如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("type chatroomwhere_result {\n  result: [chatroomOutput]\n}\ntype chatwhere_result {\n  result: [chatOutput]\n}\ntype chatroomOutput {\n  createdat: DateTime @createdat\n  id: ID\n  owner: String\n}\ntype chatOutput {\n  chatroom: chatroomOutput\n  createdat: DateTime @createdat\n  from: String\n  id: ID\n  message: String\n}\n")])])]),a("h4",{attrs:{id:"_6-2-4-2-对象名byid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-4-2-对象名byid"}},[t._v("#")]),t._v(' 6.2.4.2 "对象名byid"')]),t._v(" "),a("p",[t._v("操作定义如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("chatbyid(id: ID!): chatOutput\nchatroombyid(id: ID!): chatroomOutput\n")])])]),a("p",[t._v("这是根据ID，返回一个确定对象的方法。")]),t._v(" "),a("h3",{attrs:{id:"_6-2-5-对象的订阅"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-5-对象的订阅"}},[t._v("#")]),t._v(" 6.2.5 对象的订阅")]),t._v(" "),a("p",[t._v("自定义对象的订阅接口是自定义对象的实时API，能够根据确定的查询条件，返回指定对象的变更。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("chatSubscription(mutationtypes: [String], where: chatWhereFilter): chatSubscriptionResult\nchatroomSubscription(mutationtypes: [String], where: chatroomWhereFilter): chatroomSubscriptionResult\n")])])]),a("p",[t._v("订阅接口的输入参数中：")]),t._v(" "),a("ul",[a("li",[t._v("mutationtypes是操作类型的列表，有insert、update、delete三种。")]),t._v(" "),a("li",[t._v("where是订阅对象的查询条件。")])]),t._v(" "),a("p",[t._v("返回结果定义如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("type chatSubscriptionResult {\n  _typename: String\n  mutationtype: String\n  node: chatOutput\n}\ntype chatroomSubscriptionResult {\n  _typename: String\n  mutationtype: String\n  node: chatroomOutput\n}\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);