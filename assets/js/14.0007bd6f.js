(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{345:function(t,a,e){"use strict";e.r(a);var s=e(33),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"六、对象类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#六、对象类型"}},[t._v("#")]),t._v(" 六、对象类型")]),t._v(" "),e("p",[t._v("在EasyGQL中,开发者可以通过EasyGQL提供的框架非常方便的扩展数据类型，EasyGQL会为数据类型提供持久化服务、对应数据的增删改查接口以及相应的权限控制。")]),t._v(" "),e("h2",{attrs:{id:"_6-1-对象定义"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-对象定义"}},[t._v("#")]),t._v(" 6.1  对象定义")]),t._v(" "),e("p",[t._v("要完整描述一个对象，需要定义如下属性：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("序号")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("属性名")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("含义")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("默认值")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("是否非空")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("id")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("类型唯一标识")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("系统会自动赋予每个新增字段一个唯一标识")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("非空")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("2")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("name")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("类型名称")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("无")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("非空")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("3")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("scalarfields")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("标量字段列表")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("空列表")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("非空")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("4")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("enumfields")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("枚举字段列表")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("空列表")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("非空")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("5")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("fromrelations")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("左关联字段列表")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("空列表")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("非空")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("6")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("torelations")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("右关联字段列表")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("空列表")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("非空")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("7")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("unreadable_roles")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("不可读角色列表")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("空列表")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("非空")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("8")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("uninsertable_roles")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("不可插入角色列表")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("空列表")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("非空")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("9")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("undeletable_roles")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("不可删除角色列表")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("空列表")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("非空")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("10")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("unupdatable_roles")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("不可更新角色列表")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("空列表")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("非空")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("11")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("read_constraints")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("读约束")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("空map")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("非空")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("12")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("update_constraints")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("更新约束")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("空map")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("非空")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("13")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("delete_constraints")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("删除约束")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("空map")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("否")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("14")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("unique_constraints")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("唯一约束")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("空map")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("否")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("15")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("description")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("描述")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v('""')]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("否")])])])]),t._v(" "),e("p",[t._v("一个对象类型主要包含以下信息：")]),t._v(" "),e("ul",[e("li",[t._v("id、名字、描述等信息")]),t._v(" "),e("li",[t._v("标量字段、枚举类型字段、关联字段等字段信息")]),t._v(" "),e("li",[t._v("增删改查等操作的角色限制信息")]),t._v(" "),e("li",[t._v("每一个角色对于增删改查的行级约束信息")])]),t._v(" "),e("h2",{attrs:{id:"_6-2-对象类型定义的api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-对象类型定义的api"}},[t._v("#")]),t._v(" 6.2 对象类型定义的API")]),t._v(" "),e("p",[t._v("在EasyGQL控制台这个Schema中，为对象类型的增加和修改提供了以下API")]),t._v(" "),e("h3",{attrs:{id:"_6-2-1-对象类型的新增"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-1-对象类型的新增"}},[t._v("#")]),t._v(" 6.2.1 对象类型的新增")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("input ContentTypeInput  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  delete_constraints"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Object\n  description"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n  id"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ID")]),t._v("\n  name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n  read_constraints"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Object\n  undeletable_roles"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Role"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  uninsertable_roles"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Role"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  unreadable_roles"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Role"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  unupdatable_roles"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Role"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  update_constraints"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Object\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("objecttypesInSchema_IDInput")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("from_id"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ID")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reset"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Boolean "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" to_id"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ID")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" _NestInputResult \n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("objecttypesInSchema_ObjectInput")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("from_id"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ID")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reset"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Boolean "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" to_object"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ContentTypeInput"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" _NestInputResult \n")])])]),e("p",[t._v("以上API是在一个schema中增加一个对象类型的API，")]),t._v(" "),e("h3",{attrs:{id:"_6-2-2-对象类型的修改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-2-对象类型的修改"}},[t._v("#")]),t._v(" 6.2.2 对象类型的修改")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("input ContentTypeUpdateInput  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  delete_constraints"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Object\n  description"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String\n  id"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ID")]),t._v("\n  name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String\n  read_constraints"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Object\n  undeletable_roles"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Role"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  uninsertable_roles"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Role"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  unreadable_roles"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Role"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  unupdatable_roles"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Role"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  update_constraints"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Object\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\ninput ContentTypeWhereInput  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  and"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ContentTypeWhereInput"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  field_contains"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  filter"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ContentTypeFieldFilter\n  not"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ContentTypeWhereInput\n  or"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ContentTypeWhereInput"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ContentTypeUpdate")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("object"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ContentTypeUpdateInput"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" where"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ContentTypeWhereInput"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ContentType_UpdateResult\n")])])]),e("p",[t._v("以上是对一个对象类型进行修改的API")]),t._v(" "),e("h3",{attrs:{id:"_6-2-3-对象类型的删除"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-3-对象类型的删除"}},[t._v("#")]),t._v(" 6.2.3 对象类型的删除")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("objecttypesInSchema_NestRemove")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("from_id"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ID")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" to_id"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ID")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" _NestRemoveResult \n")])])]),e("p",[t._v("以上是对一个对象类型进行删除的API")]),t._v(" "),e("h3",{attrs:{id:"_6-2-4-对象类型的查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-4-对象类型的查询"}},[t._v("#")]),t._v(" 6.2.4 对象类型的查询")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ContentType")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ID")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ContentType\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ContentTypeMany")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("where"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ContentTypeWhereInput"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ContentType"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("p",[t._v("以上是对一个对象类型进行查询的API,可以通过查询shema信息查询到一个schema下的所有对象类型")]),t._v(" "),e("h2",{attrs:{id:"_6-3-对象的api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-对象的api"}},[t._v("#")]),t._v(" 6.3 对象的API")]),t._v(" "),e("p",[t._v("针对每一个对象类型，EasyGQL会为该类型在数据库中定义相应的数据库存储结构，同时对外提供6种API（以Chat对象类型为例）")]),t._v(" "),e("h3",{attrs:{id:"_6-3-1-新增api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-1-新增api"}},[t._v("#")]),t._v(" 6.3.1 新增API")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('Createchat(conflict: String = "replace", objects: [chatInput]): insert_return\nCreatechatroom(conflict: String = "replace", objects: [chatroomInput]): insert_return\n')])])]),e("p",[t._v("conflict是一个冲突解决配置，默认为replace，表示当碰到ID重复的数据对象时进行整体替代，其他可选择值为update，update表示对冲突对象中重复的字段进行更新，原有的字段如果在插入的时候没有被声明将会保留。")]),t._v(" "),e("p",[t._v("objects 是对应对象的一个数组，对应输入对象的类型为“对象名Input”,例如：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("input chatInput {\n  chatroom: ID!\n  from: String!\n  id: ID\n  message: String!\n}\ninput chatroomInput {\n  id: ID\n  owner: String!\n}\n")])])]),e("p",[t._v("进行数据插入时，对应输入类型与之前定义的类型区别主要有：")]),t._v(" "),e("ul",[e("li",[t._v("增加了一个可选字段id,如果插入时不给该字段赋值，EasyGQL会自动赋予一个UUID为该数据对象的唯一主键。")]),t._v(" "),e("li",[t._v("在存在对象嵌套的情况下，用对应对象的id表示该对象。")])]),t._v(" "),e("p",[t._v("进行数据插入时返回值的格式如下有三部分组成：affectedrow表示被影响的行数：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("type insert_return {\n  affectedrow: Int\n}\n")])])]),e("h3",{attrs:{id:"_6-2-2-对象的删除"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-2-对象的删除"}},[t._v("#")]),t._v(" 6.2.2 对象的删除")]),t._v(" "),e("p",[t._v('针对用户定义的每一个对象，EasyGQL会提供一个名为"Delete对象名"数据删除接口，输入参数是查询条件。例如：')]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("Deletechat(where: chatWhereFilter): delete_return\nDeletechatroom(where: chatroomWhereFilter): delete_return\n")])])]),e("p",[t._v("参数where为数据查询时的过滤条件，满足过滤条件的所有对象均会被删除。")]),t._v(" "),e("p",[t._v("数据返回有三部分数据：affectedrow表示被影响的行数。例如：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("type delete_return {\n  affectedrow: Int\n}\n")])])]),e("h3",{attrs:{id:"_6-2-3-对象的修改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-3-对象的修改"}},[t._v("#")]),t._v(" 6.2.3 对象的修改")]),t._v(" "),e("p",[t._v('针对用户定义的每一个对象，EasyGQL会提供一个"Update对象名"的数据更新接口，该接口接受两个参数：where表示查询条件，object表示待更新的值。例如：')]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("Updatechat(object: chatUpdateInput!, where: chatWhereFilter): update_return\nUpdatechatroom(object: chatroomUpdateInput!, where: chatroomWhereFilter): update_return\n")])])]),e("p",[t._v('object的对象类型是“对象名UpdateInput”，是必填字段。“对象名UpdateInput”与"对象名input"的区别是所有字段均为非必填字段。例如：')]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("input chatUpdateInput {\n  chatroom: ID\n  from: String\n  id: ID\n  message: String\n}\ninput chatroomUpdateInput {\n  id: ID\n  owner: String\n}\n")])])]),e("p",[t._v("返回值有三部分内容：affectedrow表示更新的行数，例如：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("type update_return {\n  affectedrow: Int\n}\n")])])]),e("h3",{attrs:{id:"_6-2-4-对象的查找"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-4-对象的查找"}},[t._v("#")]),t._v(" 6.2.4 对象的查找")]),t._v(" "),e("p",[t._v("针对用户定义的每一个对象类型，EasyGQL提供两个查询接口：“对象名Many”和“对象名byid”。")]),t._v(" "),e("h4",{attrs:{id:"_6-2-4-1-对象名many"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-4-1-对象名many"}},[t._v("#")]),t._v(' 6.2.4.1 "对象名Many"')]),t._v(" "),e("p",[t._v("如下是chats和chatrooms的定义:")]),t._v(" "),e("p",[t._v("chatroomMany(first: Int = -1, last: Int = -1, limit: Int = 2147483647, orderby: String, skip: Int = 0, where: chatroomWhereInput): chatroom")]),t._v(" "),e("p",[t._v("chatMany(first: Int = -1, last: Int = -1, limit: Int = 2147483647, orderby: String, skip: Int = 0, where: chatWhereFilter): chat")]),t._v(" "),e("p",[t._v("在以上定义中：")]),t._v(" "),e("ul",[e("li",[t._v("first表示按照当前排序规则取前xx个要素。")]),t._v(" "),e("li",[t._v("last表示按照当前排序规则取最后xx个要素。")]),t._v(" "),e("li",[t._v("limit表示按照当前排序规则取最多XX个要素。limit不能和first、last共用。")]),t._v(" "),e("li",[t._v("skip表示按照当前排序规则从第XX个元素开始取值。skip不能和first、last共用，skip可以和limit进行组合分页。")]),t._v(" "),e("li",[t._v("orderby表示查询时的排序规则，使用方法如“chatroom,desc”，表示对chatroom进行倒序排列。")]),t._v(" "),e("li",[t._v('"对象名WhereFilter“表示对象的过滤条件。')])]),t._v(" "),e("p",[t._v("过滤条件对象“对象名WhereInput”：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("input chatWhereInput {\n  and: chatWhereInput\n  filter: chatFieldFilter\n  field_contains: [String]\n  not: chatWhereInput\n  or: chatWhereInput\n}\ninput chatroomWhereInput {\n  and: chatroomWhereInput\n  col: chatroomFieldFilter\n  field_contains: [String]\n  not: chatroomWhereInput\n  or: chatroomWhereInput\n}\ninput chatFieldFilter {\n  chatroom: IDFilter\n  from: StringFilter\n  id: IDFilter\n  message: StringFilter\n}\ninput chatroomFieldFilter {\n  id: IDFilter\n  owner: StringFilter\n}\n")])])]),e("ul",[e("li",[t._v("其中：")]),t._v(" "),e("li",[t._v("and,or,not表示对后续过滤条件的与、或、非操作。")]),t._v(" "),e("li",[t._v("field_contains，表示所查询对象必须包含的字段。")]),t._v(" "),e("li",[t._v('"对象名FieldFilter"是所查询对象的字段级过滤条件，根据每个字段所基于的标量类型不一样，查询过滤条件不一样。具体见下表：')])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("标量类型")]),t._v(" "),e("th",[t._v("操作符")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("String")]),t._v(" "),e("td",[t._v("eq,ne,lt,le,gt,ge,match")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("Int")]),t._v(" "),e("td",[t._v("eq,ne,lt,le,gt,ge")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("Long")]),t._v(" "),e("td",[t._v("eq,ne,lt,le,gt,ge")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("BigDecimal")]),t._v(" "),e("td",[t._v("eq,ne,lt,le,gt,ge")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("ID")]),t._v(" "),e("td",[t._v("eq,ne,lt,le,gt,ge,match")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("Boolean")]),t._v(" "),e("td",[t._v("istrue")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("List")]),t._v(" "),e("td",[t._v("hasone,none,all")])])])]),t._v(" "),e("h4",{attrs:{id:"_6-2-4-2-对象名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-4-2-对象名"}},[t._v("#")]),t._v(' 6.2.4.2 "对象名"')]),t._v(" "),e("p",[t._v("操作定义如下：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("chatd: ID!): chat\nchatroom(id: ID!): chatroom\n")])])]),e("p",[t._v("这是根据ID，返回一个确定对象的方法。")]),t._v(" "),e("h3",{attrs:{id:"_6-2-5-对象的订阅"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-5-对象的订阅"}},[t._v("#")]),t._v(" 6.2.5 对象的订阅")]),t._v(" "),e("p",[t._v("自定义对象的订阅接口是自定义对象的实时API，能够根据确定的查询条件，返回指定对象的变更。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("input chatroom_FieldsMap  {\n  members: Boolean = false\n  roominfo: Boolean = false\n  roomname: Boolean = false\n}\n\ninput chat_FieldsMap  {\n  content: Boolean = false\n  from: Boolean = false\n}\n\nchatroomListener(select: chatroom_FieldsMap, watch: chatroom_FieldsMap, where: chatroomWhereInput): Object \nchatListener(select: chat_FieldsMap, watch: chat_FieldsMap, where: chatWhereInput): Object \n")])])]),e("p",[t._v("订阅接口的输入参数中：")]),t._v(" "),e("ul",[e("li",[t._v("select是希望订阅结果返回的字段名")]),t._v(" "),e("li",[t._v("watch是希望监控变化的字段名")]),t._v(" "),e("li",[t._v("where是查询条件")])]),t._v(" "),e("p",[t._v("返回结果有3个字段：")]),t._v(" "),e("ul",[e("li",[t._v("action，表示操作的种类有：insert、update、delete")]),t._v(" "),e("li",[t._v("new_val, 表示新的值")]),t._v(" "),e("li",[t._v("old_val, 表示旧的值")])])])}),[],!1,null,null,null);a.default=n.exports}}]);