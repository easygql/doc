(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{325:function(t,_,v){"use strict";v.r(_);var e=v(33),a=Object(e.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"九、触发器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#九、触发器"}},[t._v("#")]),t._v(" 九、触发器")]),t._v(" "),v("p",[t._v("trigger主要是基于某一个对象类型的数据的增删改进行订阅，通过trigger可以非常方便的调用第三方API（比如sendgrid、slack、twillio sms等）从而实现与第三方API集成的目的。")]),t._v(" "),v("h2",{attrs:{id:"_9-1-触发器的架构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-触发器的架构"}},[t._v("#")]),t._v(" 9.1 触发器的架构")]),t._v(" "),v("p",[t._v("如下图：")]),t._v(" "),v("p",[v("img",{attrs:{src:"/doc/img/trigger_architect.png#alt=trigger_architect",alt:""}})]),t._v(" "),v("p",[t._v("在EasyGQL中，开发者可以非常方便的针对定义的对象类型，添加触发器以集成外部Restful WebService，当Schema对应的系统用户通过EasyGQL-Engine提供的接口修改数据库数据时，EasyGQL会根据实现定义好的外部Restful API，发送服务请求。")]),t._v(" "),v("h2",{attrs:{id:"_9-2-触发器属性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-触发器属性"}},[t._v("#")]),t._v(" 9.2 触发器属性")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[v("strong",[t._v("序号")])]),t._v(" "),v("th",[v("strong",[t._v("属性")])]),t._v(" "),v("th",[v("strong",[t._v("含义")])]),t._v(" "),v("th",[v("strong",[t._v("非空")])]),t._v(" "),v("th",[v("strong",[t._v("默认值")])])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("1")]),t._v(" "),v("td",[t._v("id")]),t._v(" "),v("td",[t._v("触发器的唯一ID")]),t._v(" "),v("td",[t._v("非空")]),t._v(" "),v("td",[t._v("UUID")])]),t._v(" "),v("tr",[v("td",[t._v("2")]),t._v(" "),v("td",[t._v("name")]),t._v(" "),v("td",[t._v("trigger的名字")]),t._v(" "),v("td",[t._v("非空")]),t._v(" "),v("td",[t._v("无")])]),t._v(" "),v("tr",[v("td",[t._v("3")]),t._v(" "),v("td",[t._v("typename")]),t._v(" "),v("td",[t._v("对应contenttype的名字")]),t._v(" "),v("td",[t._v("非空")]),t._v(" "),v("td",[t._v("无")])]),t._v(" "),v("tr",[v("td",[t._v("4")]),t._v(" "),v("td",[t._v("eventtype")]),t._v(" "),v("td",[t._v("Insert、 update、 remove 、all")]),t._v(" "),v("td",[t._v("非空")]),t._v(" "),v("td",[t._v("无")])]),t._v(" "),v("tr",[v("td",[t._v("5")]),t._v(" "),v("td",[t._v("headers")]),t._v(" "),v("td",[t._v("http协议头")]),t._v(" "),v("td",[t._v("可空")]),t._v(" "),v("td",[t._v("content-type=application/json")])]),t._v(" "),v("tr",[v("td",[t._v("6")]),t._v(" "),v("td",[t._v("payloadformatter")]),t._v(" "),v("td",[t._v("发送消息内容的String格式串")]),t._v(" "),v("td",[t._v("非空")]),t._v(" "),v("td",[t._v("无")])]),t._v(" "),v("tr",[v("td",[t._v("7")]),t._v(" "),v("td",[t._v("payloadargs")]),t._v(" "),v("td",[t._v("消息内容中参数值")]),t._v(" "),v("td",[t._v("可空")]),t._v(" "),v("td",[t._v("无")])]),t._v(" "),v("tr",[v("td",[t._v("8")]),t._v(" "),v("td",[t._v("ok_status")]),t._v(" "),v("td",[t._v("发送成功的状态码")]),t._v(" "),v("td",[t._v("非空")]),t._v(" "),v("td",[t._v("默认为200")])]),t._v(" "),v("tr",[v("td",[t._v("9")]),t._v(" "),v("td",[t._v("retry_times")]),t._v(" "),v("td",[t._v("重试次数")]),t._v(" "),v("td",[t._v("非空")]),t._v(" "),v("td",[t._v("默认为3次")])]),t._v(" "),v("tr",[v("td",[t._v("10")]),t._v(" "),v("td",[t._v("webhook_url")]),t._v(" "),v("td",[t._v("rest api的地址")]),t._v(" "),v("td",[t._v("非空")]),t._v(" "),v("td",[t._v("无")])]),t._v(" "),v("tr",[v("td",[t._v("11")]),t._v(" "),v("td",[t._v("startdate")]),t._v(" "),v("td",[t._v("生效时间")]),t._v(" "),v("td",[t._v("非空")]),t._v(" "),v("td",[t._v("无")])]),t._v(" "),v("tr",[v("td",[t._v("12")]),t._v(" "),v("td",[t._v("expiredate")]),t._v(" "),v("td",[t._v("失效时间")]),t._v(" "),v("td",[t._v("非空")]),t._v(" "),v("td",[t._v("无")])]),t._v(" "),v("tr",[v("td",[t._v("13")]),t._v(" "),v("td",[t._v("payload")]),t._v(" "),v("td",[t._v("restapi报文体格式")]),t._v(" "),v("td",[t._v("可空")]),t._v(" "),v("td",[t._v("无")])])])]),t._v(" "),v("p",[t._v("下面以一个集成邮件发送功能的案例，来说明触发器的使用。")]),t._v(" "),v("h3",{attrs:{id:"_9-3-邮件发送工具"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_9-3-邮件发送工具"}},[t._v("#")]),t._v(" 9.3 邮件发送工具")]),t._v(" "),v("p",[t._v("邮件发送工具代码见 github,邮件发送工具对外暴露的rest服务接口是：http://IP:端口/mail\n邮件发送工具接收4个参数：")]),t._v(" "),v("ul",[v("li",[t._v("from: 表示发送邮箱")]),t._v(" "),v("li",[t._v("to : 表示目标邮箱")]),t._v(" "),v("li",[t._v("subject: 邮箱标题")]),t._v(" "),v("li",[t._v("text : 邮箱内容")])]),t._v(" "),v("h3",{attrs:{id:"_9-4-定义触发器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_9-4-定义触发器"}},[t._v("#")]),t._v(" 9.4 定义触发器")]),t._v(" "),v("p",[t._v("还是以聊天室的schema为例，在定义触发器时，使用触发器定义API:")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v('input TriggerInput   {\n  description: String = ""\n  eventtype: [Event]\n  expiredate: Date!\n  headers: Object\n  id: ID\n  name: String!\n  ok_status: String = "200"\n  payloadargs: [String]\n  payloadformatter: String\n  retry_times: Int = 3\n  startdate: Date!\n  typename: String!\n  webhookurl: String!\n}\nmutation {\ntriggersInSchema_ObjectInput(from_id: ID!, reset: Boolean = false, to_object: [TriggerInput]!): _NestInputResult \n}\n')])])]),v("p",[t._v("定义语句如下：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v('mutation {\n  triggersInSchema_ObjectInput(from_id:"5e91e934d47ea10864002328",to_object:[\n    {\n      typename:"chat"\n      startdate:"2019-10-11"\n      expiredate:"2021-10-11"\n      payloadformatter:"{\\"from\\":\\"xxxx@gmail.com\\",\\"to\\":\\"xxxx@gmail.com\\"},\\"subject\\":\\"test email\\",\\"text\\":\\"%s\\""\n      eventtype:[insert]\n      payloadargs:[content]\n      webhookurl:"http://127.0.0.1:9996/mail"\n    }\n  ]) {\n    inputNestIDList\n  }\n}\n')])])]),v("p",[t._v("在定义好触发器后，需要重新发布Schema")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v('mutation {\n  SchemaPublish(schemaid:"5e91e934d47ea10864002328") {\n    OperationResult\n  }\n}\n')])])]),v("p",[t._v("如此，在聊天室插入的每条消息,对应邮箱都会收到一封通知邮件")])])}),[],!1,null,null,null);_.default=a.exports}}]);